$page-banner-breakpoints: (
        "palm" "screen and (max-width: 525px)",
        "lap" "screen and (min-width: 526px) and (max-width: 768px)",
        "lap-and-up" "screen and (min-width: 769px)",
        "portable" "screen and (max-width: 768px)",
        "desk" "screen and (min-width: 769px)",
        "retina" "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)"
) !default;
$page-banner-success-bg: #8CC237 !default;
$page-banner-warning-bg: #f9f1c5 !default;
$page-banner-warning-color: #71562e !default;
$page-banner-error-bg: #ea4858 !default;
$page-banner-error-color: white !default;
$page-banner-message-success-color: white !default;
$page-banner-should-show-top-nav: true !default;
$page-banner-header-height-palm: 0 !default;
$page-banner-header-height: 0 !default;
$page-banner-duration-animation-length: 300ms !default;
$page-banner-should-show-top-nav: true !default;

@mixin page-banner-vendor($prop, $val) {
  -webkit-#{$prop}: #{$val};
  -ms-#{$prop}: #{$val};
  -moz-#{$prop}: #{$val};
  -o-#{$prop}: #{$val};
  #{$prop}: #{$val};
}

@mixin page-banner-media-query($mq) {

  $breakpoint-found: false;

  // Loop through the list of breakpoints we’ve provided in our settings file.
  @each $breakpoint in $page-banner-breakpoints {

    // Grab the alias and the condition from their respective locations in
    // the list.
    $alias: nth($breakpoint, 1);
    $condition: nth($breakpoint, 2);

    // If the media query we’ve specified has an alias and a condition...
    @if $mq == $alias and $condition {

      // ...tell the mixin that we’ve found it...
      $breakpoint-found: true;

      // ...and spit it out here.
      @media #{$condition} {
        @content;
      }

    }

  }

  // If the user specifies a non-exitent alias, send them a warning.
  @if $breakpoint-found == false {
    @warn "Oops! Breakpoint ‘#{$mq}’ does not exist."
  }

}

.page-banner__container {
  width: 100%;
  top: 0;
  z-index: 1;
}

.page-banner__container--fixed {
  position: fixed;
  @include page-banner-vendor(transform, translateZ(1px));
  top: 0 !important;
}

.page-banner {
  width: 100%;
  text-align: center;
  overflow: hidden;
  font-size: 1rem;
  position: relative;
  height: 0;
  will-change: top;
  @include page-banner-vendor(transition, height $page-banner-duration-animation-length ease);

  @if $page-banner-should-show-top-nav == true {
    top: $page-banner-header-height;
    @include page-banner-media-query(palm) {
      top: $page-banner-header-height-palm;
    }
  } @else {
    top: 0;
  }
  @include page-banner-media-query(palm) {
    text-align: left;
  }
}

.page-banner__body {
  text-align: center;
  padding: 15px 50px;
}

.page-banner__close {
  position: absolute;
  right: 24px;
  top: 11px;
  opacity: 0.7;
  cursor: pointer;
  font-size: 24px;
  &:hover {
    opacity: 1;
  }
  @include page-banner-media-query(palm) {
    right: 10px;
    top: 4px;
  }
}

.page-banner__icon-close {
  display: inline-block;
  width: 19px;
  height: 19px;
  background-repeat: no-repeat;
}

.page-banner--success {
  .page-banner__body {
    background: $page-banner-success-bg;
    color: $page-banner-message-success-color;
  }
}

.page-banner--warning {
  .page-banner__body {
    background-color: $page-banner-warning-bg;
    color: $page-banner-warning-color;
  }
}

.page-banner--error {
  .page-banner__body {
    background-color: $page-banner-error-bg;
    color: $page-banner-error-color;
  }
}